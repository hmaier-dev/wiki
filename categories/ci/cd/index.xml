<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CI/CD on Wiki</title>
    <link>https://hmaier-dev.github.io/wiki/categories/ci/cd/</link>
    <description>Recent content in CI/CD on Wiki</description>
    <generator>Hugo</generator>
    <language>de-de</language>
    <atom:link href="https://hmaier-dev.github.io/wiki/categories/ci/cd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ansible</title>
      <link>https://hmaier-dev.github.io/wiki/ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hmaier-dev.github.io/wiki/ansible/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;ansible-playbook -i inventory.ini add_admin_user.yml&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;mit-vagrant&#34;&gt;Mit Vagrant&lt;/h2&gt;&#xA;&lt;p&gt;Muss muss in der &lt;code&gt;inventory.ini&lt;/code&gt; mit angeben, an welchem Ort sich der&#xA;Private-Key befindet. Sonst kann Ansible sich nicht mit der VM&#xA;verbinden.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;[test_machine]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;192.168.56.10 ansible_ssh_user&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;vagrant ansible_ssh_private_key_file=.vagrant/machines/default/virtualbox/private_key&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;missing-sudo-password&#34;&gt;&lt;code&gt;missing sudo password&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Falls der Zieluser (&lt;code&gt;ansible_ssh_user&lt;/code&gt;) auf dem System nicht root ist,&#xA;muss dieser in der &lt;code&gt;sudo&lt;/code&gt;-Gruppe sein, als auch sein Password mitgegeben&#xA;werden. Dies tut man mit folgender Flag.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ansible-playbook -i inventory.ini basic_setup.yml --ask-become-pass&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Earthly</title>
      <link>https://hmaier-dev.github.io/wiki/earthly/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hmaier-dev.github.io/wiki/earthly/</guid>
      <description>&lt;p&gt;Ist ein Buildtool welches Container nutzt, um die Toolchain bereit&#xA;zustellen. Verschiedene Targets werden über ein sogennates &lt;code&gt;Earthfile&lt;/code&gt;&#xA;deklariert. Erinnern tut &lt;code&gt;earthly&lt;/code&gt; dabei, an klassiche Makefiles.&lt;/p&gt;&#xA;&lt;p&gt;Der große Vorteil an &lt;code&gt;earthly&lt;/code&gt; ist die Portabilität. Man kann seine&#xA;CI-Pipeline lokal zusammenbauen und erhält bei Runs enau die gleichen&#xA;Ergebnisse wie im Gitlab.&lt;/p&gt;&#xA;&lt;p&gt;Ein einziges Target, welches Python-Skripte auf ihre Richtigkeit testet,&#xA;kann beispielsweise so aussehen:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Dockerfile&#34; data-lang=&#34;Dockerfile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;syntax-python:&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;    FROM python:3.12.3 &lt;span style=&#34;color:#75715e&#34;&gt;# pullt python-image&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;    WORKDIR /src&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;    COPY --dir my/project/path container/path&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;    COPY some/other/dir/*.py container/path&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;    RUN find ./path -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*.py&amp;#34;&lt;/span&gt; | xargs -t -P4 -n1 python3 -m py_compile&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Zusammen mit anderen Targets, kann dieses verkettet werden.&lt;/p&gt;</description>
    </item>
    <item>
      <title>git</title>
      <link>https://hmaier-dev.github.io/wiki/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hmaier-dev.github.io/wiki/git/</guid>
      <description>&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;Ich möchte alles rückgängig machen was ich bisher gemacht habe&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;reset --hard&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Ich habe ungewollte Commits in meinem Branch&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;rebase -i &amp;lt;commit-hash&amp;gt;^&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Das &lt;em&gt;Circumflex&lt;/em&gt; macht den &lt;code&gt;rebase --interactive&lt;/code&gt; inklusiv. Es gibt den Parent des Commits an, und nimmt den angegebenen Commit daher in den &lt;code&gt;rebase -i&lt;/code&gt; mit hinein.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Ich muss nachträglich Änderungen zu einem Commit hinzufügen&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;commit --fixup &amp;lt;commit&amp;gt;&lt;/code&gt; und &lt;code&gt;rebase -i --autosquash&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Ich möchte Änderungen aus dem Hauptbranch (z.B. production) in&#xA;meinem branch übernehmen&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git pull &amp;amp;&amp;amp; git rebase production&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Wie kann ich ein Commit zu mehreren umwandeln&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;rebase -i &amp;amp;&amp;amp; edit &amp;lt;jeweiligen-commit&amp;gt; &amp;amp;&amp;amp; add -p&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Wie erstelle ich einen neuen Branch?&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;checkout &amp;lt;main/prod&amp;gt; &amp;amp;&amp;amp; switch -c &amp;lt;new-branch&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Ich ein &lt;code&gt;rebase -i&lt;/code&gt; auf meinen kompletten Branch machen&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git rebase -i HEAD~$( git rev-list --count --no-merges &amp;lt;main&amp;gt;..)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Bezieht den allerste Commit mit ein: &lt;code&gt;git rebase -i --root&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Wie übernehme ich einzelne Commits in meinen Branch&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git switch &amp;lt;mein-branch&amp;gt; &amp;amp;&amp;amp; git cherry-pick &amp;lt;commit-hash&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Wie sehe ich alle Änderungen in einer Datei auf Zeit?&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git log -p production.. -- &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Wie kann ich den letzten Commit, von meiner derzeitigen Position,&#xA;auseinander-basteln?&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git reset HEAD~&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Kann man mit nem &lt;code&gt;rebase -i&lt;/code&gt; kombinieren, da dabei der&#xA;&lt;code&gt;HEAD&lt;/code&gt; ja durch die Commits wandert. Einfach im Editor mit&#xA;&lt;code&gt;edit&lt;/code&gt; am gewünschten Commit anhalten und dann &lt;code&gt;reset&lt;/code&gt;en.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Wie kann ich ein gelöschtes File wiederherstellen.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git checkout &amp;lt;commit-hash&amp;gt;^ -- &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;git add &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;This feature helps Git remember how you resolved conflicts&#xA;previously, so if the same conflict arises again, Git can&#xA;automatically apply the same resolution.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git config --global rerere.enabled true&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Wie kriege ich mein lokales Repo auf den Stand des Remote-Repos?&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Falls &lt;code&gt;origin&lt;/code&gt; &lt;code&gt;main&lt;/code&gt; ist: &lt;code&gt;git rebase origin/main&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Welches ist Remote-Repo?&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git branch -a&lt;/code&gt; um alle Branches zu sehen.&lt;/li&gt;&#xA;&lt;li&gt;Um nur die Remote-Branches zu sehen ein &lt;code&gt;git branch -r&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Wie arbeite ich mit meinem Remote-Branch lokal?&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Zuerst, alle Remote-Branches anzeigen lasse: &lt;code&gt;git branch -r&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Dann, neuen lokalen Branch auf Remote-Branch als Startpunkt zeigen lassen: &lt;code&gt;git checkout -b &amp;lt;branch&amp;gt; origin/&amp;lt;branch&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Wie finde ich den Commit mit dem eine Änderung an einer Zeile gemacht wurde?&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git blame -L &amp;lt;begin&amp;gt;,&amp;lt;end&amp;gt; -- &amp;lt;path/to/file&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Für jede einzelne Zeile im Bereich (inklusiv) wird der kurze Commit angezeigt. Über ein &lt;code&gt;git show &amp;lt;commit&amp;gt;&lt;/code&gt; findet man den den jeweiligen Commit.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;rebase&#34;&gt;rebase&lt;/h2&gt;&#xA;&lt;p&gt;Mit einem &lt;code&gt;rebase &amp;lt;main&amp;gt;&lt;/code&gt; bringt man den Branch auf die Höhe des&#xA;Hauptbranches.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Github</title>
      <link>https://hmaier-dev.github.io/wiki/github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hmaier-dev.github.io/wiki/github/</guid>
      <description>&lt;h2 id=&#34;actions&#34;&gt;Actions&lt;/h2&gt;&#xA;&lt;h3 id=&#34;setting-up-ssh-access-for-runner-to-vm&#34;&gt;Setting up ssh access for runner to vm&lt;/h3&gt;&#xA;&lt;p&gt;You will need create a key-pair. On the runner you will need the private key and on the vm the public key.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;id_rsa&lt;/code&gt; goes into e.g. &lt;code&gt;{{ secrets.SSH_KEY }}&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;id_rsa.pub&lt;/code&gt; goes into ~/.ssh/authorized_keys on the vm&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Best practice would be to create the user on your local machine and distribute the keys from there.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;useradd deploy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;passwd deploy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;su deploy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-keygen -t ed25519 -a &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; -C &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;runner@github.com&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls -la  ~/.ssh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;updating-static-html-on-vm&#34;&gt;Updating static html on vm&lt;/h3&gt;&#xA;&lt;p&gt;When ssh is setup right, you can over the files with &lt;code&gt;rsync&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gitlab</title>
      <link>https://hmaier-dev.github.io/wiki/gitlab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hmaier-dev.github.io/wiki/gitlab/</guid>
      <description>&lt;h2 id=&#34;include-a-foreign-job&#34;&gt;Include a foreign job&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;include&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;remote&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https://gitlab.com/repo/dir/-/raw/version/jobs.yml&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;stages&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;test&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;deploy&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#ae81ff&#34;&gt;apply&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;test&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;stage&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;test&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;extends&lt;/span&gt;: [&lt;span style=&#34;color:#ae81ff&#34;&gt;.gj_earthly]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#ae81ff&#34;&gt;earthly --no-output +test&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;only&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#ae81ff&#34;&gt;branches&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;except&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#ae81ff&#34;&gt;production&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;extends: Inherits this job (could be keept in a seperate file and&#xA;imported)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;e.g.: &lt;code&gt;gj_earthly&lt;/code&gt; is keept in a different repo in the&#xA;&lt;code&gt;jobs.yml&lt;/code&gt; which is imported at the top&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;only/except: &lt;a href=&#34;https://docs.gitlab.com/ee/ci/yaml/#only--except&#34;&gt;https://docs.gitlab.com/ee/ci/yaml/#only--except&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Basic Syntax: &lt;a href=&#34;https://docs.gitlab.com/ee/ci/yaml/&#34;&gt;https://docs.gitlab.com/ee/ci/yaml/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
