<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cli on Wiki</title>
    <link>https://hmaier-dev.github.io/wiki/categories/cli/</link>
    <description>Recent content in Cli on Wiki</description>
    <generator>Hugo</generator>
    <language>de-de</language>
    <atom:link href="https://hmaier-dev.github.io/wiki/categories/cli/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>bash</title>
      <link>https://hmaier-dev.github.io/wiki/bash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hmaier-dev.github.io/wiki/bash/</guid>
      <description>&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;How to lock a account: &lt;code&gt;usermod -L user&lt;/code&gt; (unlock it with &lt;code&gt;-U&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;nützliche-kommandos&#34;&gt;Nützliche Kommandos&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;+set -o vi&lt;/code&gt;: vim-like movement in der aktivieren&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;CTRL+R&lt;/code&gt;: Suche in der History. Mit &lt;code&gt;&amp;lt;ESC&amp;gt;&lt;/code&gt; beenden.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;find . -type f | entr -r go run ./cmd/web&lt;/code&gt;: Führt Kommando erneut aus sobald sich ein Datei in einem Unterordner ändert.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;colors-and-effects-in-terminal&#34;&gt;Colors and Effects in Terminal&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://misc.flogisoft.com/bash/tip_colors_and_formatting&#34;&gt;https://misc.flogisoft.com/bash/tip_colors_and_formatting&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;if-else&#34;&gt;if-else&lt;/h2&gt;&#xA;&lt;p&gt;If you want to test a string, you can use&lt;/p&gt;</description>
    </item>
    <item>
      <title>ffmpeg</title>
      <link>https://hmaier-dev.github.io/wiki/ffmpeg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hmaier-dev.github.io/wiki/ffmpeg/</guid>
      <description>&lt;h2 id=&#34;converting-filetypes&#34;&gt;Converting filetypes&lt;/h2&gt;&#xA;&lt;p&gt;If you want to convert a single ogg-file into mp3.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ffmpeg -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;file.ogg&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;file.mp3&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If there are multiple files, instead of writing a script, you could use gnu/parallel to use all of your CPU cores.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;parallel ffmpeg -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{.}.mp3&amp;#34;&lt;/span&gt; ::: *.ogg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;changing-bitrate&#34;&gt;Changing bitrate&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ffmpeg -i sounds.mp3 -b:a 128k sounds.mp3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These are the different bitrates.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;32 kbps: Very low quality, generally used for voice recordings or very small files.&lt;/li&gt;&#xA;&lt;li&gt;64 kbps: Low quality, suitable for voice recordings and some music where size is a significant concern.&lt;/li&gt;&#xA;&lt;li&gt;96 kbps: Moderate quality, often used for streaming audio over low-bandwidth connections.&lt;/li&gt;&#xA;&lt;li&gt;128 kbps: Standard quality, often considered the minimum acceptable quality for music. A common choice for streaming and digital downloads.&lt;/li&gt;&#xA;&lt;li&gt;160 kbps: Above average quality, providing better sound than 128 kbps but with a slightly larger file size.&lt;/li&gt;&#xA;&lt;li&gt;192 kbps: Good quality, often used for higher-quality music streaming and digital downloads.&lt;/li&gt;&#xA;&lt;li&gt;224 kbps: Higher quality, offering better audio fidelity than 192 kbps.&lt;/li&gt;&#xA;&lt;li&gt;256 kbps: High quality, used for better sound reproduction, often used in high-quality digital downloads.&lt;/li&gt;&#xA;&lt;li&gt;320 kbps: Highest quality for MP3, offering the best audio fidelity, often indistinguishable from the original CD-quality sound.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>gh</title>
      <link>https://hmaier-dev.github.io/wiki/gh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hmaier-dev.github.io/wiki/gh/</guid>
      <description>&lt;p&gt;If port 22 isn&amp;rsquo;t available in your network and you cannot use key-pairs to authenticate to github. You can use the internal github-tool &lt;code&gt;gh&lt;/code&gt;, which uses https.&lt;/p&gt;&#xA;&lt;h2 id=&#34;multiple-accounts&#34;&gt;multiple accounts&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.blog/changelog/2023-12-18-log-in-to-multiple-github-accounts-with-the-cli/&#34;&gt;https://github.blog/changelog/2023-12-18-log-in-to-multiple-github-accounts-with-the-cli/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;switch-accounts&#34;&gt;switch accounts&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gh auth status&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;repo-not-found&#34;&gt;repo not found&lt;/h2&gt;&#xA;&lt;p&gt;Can happen if switch accounts. Re-auth with this command:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gh auth refresh -h github.com -s repo&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>git</title>
      <link>https://hmaier-dev.github.io/wiki/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hmaier-dev.github.io/wiki/git/</guid>
      <description>&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;Ich möchte alles rückgängig machen was ich bisher gemacht habe&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;reset --hard&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Ich habe ungewollte Commits in meinem Branch&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;rebase -i &amp;lt;commit-hash&amp;gt;^&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Das &lt;em&gt;Circumflex&lt;/em&gt; macht den &lt;code&gt;rebase --interactive&lt;/code&gt; inklusiv. Es gibt den Parent des Commits an, und nimmt den angegebenen Commit daher in den &lt;code&gt;rebase -i&lt;/code&gt; mit hinein.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Ich muss nachträglich Änderungen zu einem Commit hinzufügen&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;commit --fixup &amp;lt;commit&amp;gt;&lt;/code&gt; und &lt;code&gt;rebase -i --autosquash&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Ich möchte Änderungen aus dem Hauptbranch (z.B. production) in&#xA;meinem branch übernehmen&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git pull &amp;amp;&amp;amp; git rebase production&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Wie kann ich ein Commit zu mehreren umwandeln&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;rebase -i &amp;amp;&amp;amp; edit &amp;lt;jeweiligen-commit&amp;gt; &amp;amp;&amp;amp; add -p&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Wie erstelle ich einen neuen Branch?&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;checkout &amp;lt;main/prod&amp;gt; &amp;amp;&amp;amp; switch -c &amp;lt;new-branch&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Ich ein &lt;code&gt;rebase -i&lt;/code&gt; auf meinen kompletten Branch machen&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git rebase -i HEAD~$( git rev-list --count --no-merges &amp;lt;main&amp;gt;..)&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Bezieht den allerste Commit mit ein: &lt;code&gt;git rebase -i --root&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Wie übernehme ich einzelne Commits in meinen Branch&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git switch &amp;lt;mein-branch&amp;gt; &amp;amp;&amp;amp; git cherry-pick &amp;lt;commit-hash&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Wie sehe ich alle Änderungen in einer Datei auf Zeit?&lt;/em&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git log -p production.. -- &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Wie kann ich den letzten Commit, von meiner derzeitigen Position,&#xA;auseinander-basteln?&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git reset HEAD~&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Kann man mit nem &lt;code&gt;rebase -i&lt;/code&gt; kombinieren, da dabei der&#xA;&lt;code&gt;HEAD&lt;/code&gt; ja durch die Commits wandert. Einfach im Editor mit&#xA;&lt;code&gt;edit&lt;/code&gt; am gewünschten Commit anhalten und dann &lt;code&gt;reset&lt;/code&gt;en.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Wie kann ich ein gelöschtes File wiederherstellen.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git checkout &amp;lt;commit-hash&amp;gt;^ -- &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;git add &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;This feature helps Git remember how you resolved conflicts&#xA;previously, so if the same conflict arises again, Git can&#xA;automatically apply the same resolution.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git config --global rerere.enabled true&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Wie kriege ich mein lokales Repo auf den Stand des Remote-Repos?&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Falls &lt;code&gt;origin&lt;/code&gt; &lt;code&gt;main&lt;/code&gt; ist: &lt;code&gt;git rebase origin/main&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Welches ist Remote-Repo?&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git branch -a&lt;/code&gt; um alle Branches zu sehen.&lt;/li&gt;&#xA;&lt;li&gt;Um nur die Remote-Branches zu sehen ein &lt;code&gt;git branch -r&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Wie arbeite ich mit meinem Remote-Branch lokal?&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Zuerst, alle Remote-Branches anzeigen lasse: &lt;code&gt;git branch -r&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Dann, neuen lokalen Branch auf Remote-Branch als Startpunkt zeigen lassen: &lt;code&gt;git checkout -b &amp;lt;branch&amp;gt; origin/&amp;lt;branch&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Wie finde ich den Commit mit dem eine Änderung an einer Zeile gemacht wurde?&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git blame -L &amp;lt;begin&amp;gt;,&amp;lt;end&amp;gt; -- &amp;lt;path/to/file&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Für jede einzelne Zeile im Bereich (inklusiv) wird der kurze Commit angezeigt. Über ein &lt;code&gt;git show &amp;lt;commit&amp;gt;&lt;/code&gt; findet man den den jeweiligen Commit.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;rebase&#34;&gt;rebase&lt;/h2&gt;&#xA;&lt;p&gt;Mit einem &lt;code&gt;rebase &amp;lt;main&amp;gt;&lt;/code&gt; bringt man den Branch auf die Höhe des&#xA;Hauptbranches.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ssh</title>
      <link>https://hmaier-dev.github.io/wiki/ssh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hmaier-dev.github.io/wiki/ssh/</guid>
      <description>&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Where to find the ssh access logs?&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Under &lt;code&gt;/var/log/auth.log&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;With &lt;code&gt;sudo journalctl -t sshd -n 100&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;basic-config&#34;&gt;Basic config&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host &amp;lt;name-you-want-to-type&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    HostName &amp;lt;ip&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    User &amp;lt;user&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>sudo</title>
      <link>https://hmaier-dev.github.io/wiki/sudo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hmaier-dev.github.io/wiki/sudo/</guid>
      <description>&lt;h2 id=&#34;add-user-to-sudoers-group&#34;&gt;add user to sudoers-group&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo usermod -aG sudo &amp;lt;user&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>tmux</title>
      <link>https://hmaier-dev.github.io/wiki/tmux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hmaier-dev.github.io/wiki/tmux/</guid>
      <description>&lt;p&gt;Is a terminal multiplexer which nullified my need for a tiling window manager.&lt;/p&gt;&#xA;&lt;h2 id=&#34;move-pane-to-new-window&#34;&gt;Move pane to new window&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CTRL+b; !&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;resize-pane-in-tty&#34;&gt;Resize pane in tty&lt;/h2&gt;&#xA;&lt;p&gt;You need to remap the keys, because tty isn&amp;rsquo;t very advanced.&#xA;&lt;a href=&#34;https://superuser.com/questions/688807/how-to-resize-tmux-panes-inside-tty&#34;&gt;https://superuser.com/questions/688807/how-to-resize-tmux-panes-inside-tty&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;new-session&#34;&gt;New Session&lt;/h2&gt;&#xA;&lt;p&gt;From within tmux you can use &lt;code&gt;new -s&lt;/code&gt; in the tmux cli.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CTRL+b; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;new -s mynewsession&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;new-base-directory&#34;&gt;New base directory&lt;/h2&gt;&#xA;&lt;p&gt;From within tmux you can use &lt;code&gt;attach-session -c&lt;/code&gt; in the tmux cli.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CTRL+b; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;attach-session -c ~/.config/nvim&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;rename-tab&#34;&gt;Rename tab&lt;/h2&gt;&#xA;&lt;p&gt;Renames the current tab&lt;/p&gt;</description>
    </item>
    <item>
      <title>zsh</title>
      <link>https://hmaier-dev.github.io/wiki/zsh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://hmaier-dev.github.io/wiki/zsh/</guid>
      <description>&lt;h2 id=&#34;prompt&#34;&gt;PROMPT&lt;/h2&gt;&#xA;&lt;p&gt;This will display a basic prompt containing the username and the path.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PROMPT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%F{cyan}%n%f %F{yellow}%~%f %F{green}❯%f &amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
